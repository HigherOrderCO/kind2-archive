// Provides a way to pattern match on Bits values
// - P: The motive of the elimination
// - o: The case for when the Bits value starts with a zero bit
// - i: The case for when the Bits value starts with a one bit
// - e: The case for when the Bits value is empty
// - b: The Bits value to match on
// = The result of the elimination

use Bits/{O,I,E}

match
- P: Bits -> *
- o: âˆ€(tail: Bits) (P (O tail))
- i: âˆ€(tail: Bits) (P (I tail))
- e: (P E)
- b: Bits
: (P b)

(~b P o i e)
