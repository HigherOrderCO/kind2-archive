// Tries multiple parsers in sequence until one succeeds
// - A: The type of the parsed value
// - variants: A list of guarded parsers to try
// = A parser that succeeds if any of the variants succeed

use List/{cons,nil}
use Pair/{fst,snd}
use Parser/bind
use Parser/fail
use Bool/{true,false}

variant <A>
- variants: (List (Parser/Guard A))
: (Parser A)

match variants {
  cons:
    (bind _ _ (fst _ _ variants.head) Î»success
      match success {
        true: (snd _ _ variants.head)
        false: (variant _ variants.tail)
      })
  nil: (fail _ "No matching variant")
}
