// Finds the first element in a list that satisfies a given condition
// - A: The type of elements in the list
// - fn: A function that takes an element of type A and returns a Bool
// - xs: The input list of type (List A)
// = (Maybe A) containing the first element that satisfies the condition, or None if no such element exists

use Bool/{true,false}
use List/{cons,nil}
use Maybe/{some,none}

find <A>
- fn: A -> Bool
- xs: (List A)
: (Maybe A)

match xs {
  cons: 
    let result = (fn xs.head)
    match result {
      true: (some _ xs.head)
      false: (find _ fn xs.tail)
    }
  nil: (none _)
}