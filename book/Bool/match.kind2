/// Provides a way to pattern match on boolean values.
///
/// # Inputs
///
/// * `P` - The motive of the elimination, a type family indexed by Bool.
/// * `t` - The case for when the boolean is true.
/// * `f` - The case for when the boolean is false.
/// * `b` - The boolean value to match on.
///
/// # Output
///
/// The result of the elimination, which has type `(P b)`.

use Bool/{true,false}

match
- P: âˆ€(x: Bool) *
- t: (P true)
- f: (P false)
- b: Bool
: (P b)

(~b P t f)
